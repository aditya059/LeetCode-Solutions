// C++
class Solution {
public:
    bool isVowel(char ch) {
        return ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u';
    }
    int maxVowels(string s, int k) {
        int count = 0, ans = 0;
        for(int i = 0; i < k; i++) {
            if(isVowel(s[i]))
                count++;
        }
        ans = count;
        for(int i = k; i < s.length(); i++) {
            if(isVowel(s[i]))
                count++;
            if(isVowel(s[i - k]))
                count--;
            ans = max(ans, count);
        }
        return ans;
    }
};


// Golang
func isVowel(ch byte) bool {
    return ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u'
}

func maxVowels(s string, k int) int {
    var count, ans = 0, 0
    for i := 0; i < len(s); i++ {
        if isVowel(s[i]) {
            count++
        }
        if i >= k && isVowel(s[i - k]) {
            count--;
        }    
        if i >= k - 1 && count > ans {
            ans = count
        } 
    }
    return ans
}
