/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    bool isPalindrome(ListNode* head) {
        ListNode *slow = head, *fast = head, *q = nullptr, *r;
        while(fast && fast -> next) {
            fast = fast -> next -> next;
            r = q;
            q = slow;
            slow = slow -> next;
            q -> next = r;
        }
        if(fast) slow = slow -> next;
        while(q) {
            if(q -> val != slow -> val) return false;
            q = q -> next;
            slow = slow -> next;
        }
        return true;
    }
};
