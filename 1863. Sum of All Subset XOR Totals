class Solution {
public:
    int subsetXORSum(vector<int>& nums) {
        int n = 1 << nums.size(), ans = 0;
        for(int i = 0; i < n; i++) {
            int xorVal = 0;
            for(int j = 0; j < nums.size(); j++) {
                if(i & (1 << j)) {
                    xorVal = xorVal ^ nums[j];
                }
            }
            ans += xorVal;
        }
        return ans;
    }
};

OR

class Solution {
    void solve(int i, vector<int>& nums, int &ans, int xorVal) {
        if(i == nums.size()) {
            ans += xorVal;
            return;
        }
        solve(i + 1, nums, ans, xorVal);
        solve(i + 1, nums, ans, xorVal ^ nums[i]);
    }
public:
    int subsetXORSum(vector<int>& nums) {
        int ans = 0;
        solve(0, nums, ans, 0);
        return ans;
    }
};
