class Solution {
public:
    string shortestCommonSupersequence(string str1, string str2) {
        int m = str1.length(), n = str2.length();
        vector<vector<int>> DP(m + 1, vector<int>(n + 1));
        for(int i = 0; i < m; i++) {
            for(int j = 0; j < n; j++) {
                if(str1[i] == str2[j])
                    DP[i + 1][j + 1] = DP[i][j] + 1;
                else 
                    DP[i + 1][j + 1] = max(DP[i][j + 1], DP[i + 1][j]);
            }
        }
        string ans = "";
        int i = m - 1, j = n - 1, k = m - 1, l = n - 1;
        while(i >= 0 && j >= 0) {
            if(str1[i] == str2[j]) {
                while(k > i) ans += str1[k--];
                while(l >= j) ans += str2[l--];
                i--, j--, k--;
            } else if(DP[i + 1][j + 1] == DP[i + 1][j]) {
                j--;
            } else {
                i--;
            }
        }
        while(k >= 0) ans += str1[k--];
        while(l >= 0) ans += str2[l--];
        reverse(ans.begin(), ans.end());
        return ans;
    }
};
