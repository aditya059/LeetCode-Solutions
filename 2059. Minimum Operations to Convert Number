class Solution {
public:
    int minimumOperations(vector<int>& nums, int start, int goal) {
        queue<int> Queue;
        Queue.push(start);
        int ans = 0;
        vector<bool> visited(1001);
        visited[start] = true;
        while(!Queue.empty()) {
            ans++;
            int sz = Queue.size();
            for(int i = 0; i < sz; i++) {
                int curr = Queue.front();
                Queue.pop();
                for(int val: nums) {
                    int next1 = curr + val;
                    int next2 = curr - val;
                    int next3 = curr ^ val;
                    if(next1 == goal || next2 == goal || next3 == goal) return ans;
                    if(0 <= next1 && next1 <= 1000 && !visited[next1]) {
                        Queue.push(next1);
                        visited[next1] = true;
                    }
                    if(0 <= next2 && next2 <= 1000 && !visited[next2]) {
                        Queue.push(next2);
                        visited[next2] = true;
                    }
                    if(0 <= next3 && next3 <= 1000 && !visited[next3]) {
                        Queue.push(next3);
                        visited[next3] = true;
                    }
                }
            }
        }
        return -1;
    }
};
