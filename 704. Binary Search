// C++
class Solution {
public:
    int search(vector<int>& nums, int target) {
        int l = 0;
        int h = nums.size() - 1;
        while(l <= h) {
            int m = l + (h - l) / 2;
            if(target == nums[m]) return m;
            else if (target < nums[m]) h = m - 1;
            else l = m + 1;
        }
        return -1;
    }
};


// Golang
func search(nums []int, target int) int {
    var l int = 0
    var h int = len(nums) - 1
    for l <= h {
        var m int = l + (h - l) / 2
        if target == nums[m] {
            return m
        } else if target < nums[m] {
            h = m - 1
        } else {
            l = m + 1
        }
    }
    return -1
}
