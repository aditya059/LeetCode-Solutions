class Solution {
public:
    bool isIsomorphic(string s, string t) {
        unordered_map<char, char> Map;
        bool Mapped[128] = {0};
        for(int i = 0; i < s.length(); i++) {
            if(Map.find(s[i]) == Map.end()) {
                if(Mapped[t[i]]) return false;
                Map[s[i]] = t[i];
                Mapped[t[i]] = true;
            } else if(Map[s[i]] != t[i]) {
                return false;
            }
        }
        return true;
    }
};

OR

class Solution {
public:
    bool isIsomorphic(string s, string t) {
        vector<int> Map1(128, -1), Map2(128, -1);
        for(int i = 0; i < s.length(); i++) {
            if(Map1[s[i]] != Map2[t[i]]) {
                return false;
            }
            Map1[s[i]] = Map2[t[i]] = i;
        }
        return true;
    }
};
