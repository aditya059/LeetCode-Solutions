class Solution {
public:
    bool check(bitset<26> mask1, bitset<26> mask2) {
        for(int i = 0; i < 26; i++) {
            if(mask1[i] & mask2[i] == 1)
                return false;
        }
        return true;
    }
    int maxProduct(vector<string>& words) {
        bitset<26> mask[words.size()];
        for(int i = 0; i < words.size(); i++) {
            for(int j = 0; j < words[i].size(); j++) {
                mask[i][words[i][j] - 'a'] = 1;
            }
        }
        int ans = 0;
        for(int i = 0; i < words.size(); i++) {
            for(int j = i + 1; j < words.size(); j++) {
                if(check(mask[i], mask[j])) {
                    int len = words[i].length() * words[j].length();
                    ans = max(ans, len);
                }
            }
        }
        return ans;
    }
};
