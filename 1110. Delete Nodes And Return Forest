/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    TreeNode* solve(TreeNode* root, vector<TreeNode*> &ans, vector<int> &to_delete) {
        if(!root) return root;
        root -> left = solve(root -> left, ans, to_delete);
        root -> right = solve(root -> right, ans, to_delete);
        if(binary_search(to_delete.begin(), to_delete.end(), root -> val)) {
            if(root -> left) ans.push_back(root -> left);
            if(root -> right) ans.push_back(root -> right);
            delete(root);
            return nullptr;
        }
        return root;
    }
public:
    vector<TreeNode*> delNodes(TreeNode* root, vector<int>& to_delete) {
        sort(to_delete.begin(), to_delete.end());
        vector<TreeNode*> ans;
        if(!binary_search(to_delete.begin(), to_delete.end(), root -> val)) ans.push_back(root);
        solve(root, ans, to_delete);
        return ans;
    }
};
