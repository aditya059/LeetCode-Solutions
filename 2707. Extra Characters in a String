// C++
class Solution {
public:
    int minExtraChar(string s, vector<string>& dictionary) {
        int n = s.length();
        vector<int> DP(n + 1);
        DP[0] = 0;
        for(int i = 0; i < n; i++) {
            DP[i + 1] = 1 + DP[i];
            for(string dictWord: dictionary) {
                int len = dictWord.length();
                if(i >= len - 1 && dictWord == s.substr(i - len + 1, len)) {
                    DP[i + 1] = min(DP[i + 1], DP[i - len + 1]);
                }
            }
        }
        return DP[n];
    }
};


// Golang
func minExtraChar(s string, dictionary []string) int {
    n := len(s)
    DP := make([]int, n + 1)
    for i := 0; i < n; i++ {
        DP[i + 1] = 1 + DP[i]
        for _, dictWord := range dictionary {
            leng := len(dictWord)
            if i >= leng - 1 && dictWord == s[i - leng + 1: i + 1] && DP[i - leng + 1] < DP[i + 1] {
                DP[i + 1] = DP[i - leng + 1]
            }
        }
    }
    return DP[n]
}
