class Solution {
    bool check(vector<int>& nums, int maxOperations, int mid) {
        for(int i = 0; i < nums.size(); i++) {
            maxOperations -= ceil(nums[i] * 1.0 / mid) - 1;
        }
        return maxOperations >= 0;
    }
public:
    int minimumSize(vector<int>& nums, int maxOperations) {
        int low = 1, high = *max_element(nums.begin(), nums.end());
        int ans = high;
        while(low <= high) {
            int mid = low + (high - low) / 2;
            if(check(nums, maxOperations, mid)) {
                ans = min(ans, mid);
                high = mid - 1;
            } else {
                low = mid + 1;
            }
        }
        return ans;
    }
};
