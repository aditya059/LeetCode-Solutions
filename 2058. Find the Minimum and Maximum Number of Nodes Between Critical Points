/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    vector<int> nodesBetweenCriticalPoints(ListNode* head) {
        vector<int> ans(2, INT_MAX);
        int i = 0, prev = -1, first = -1;
        while(head -> next && head -> next -> next) {
            if((head -> next -> val > head -> val && head -> next -> val > head -> next -> next -> val) || (head -> next -> val < head -> val && head -> next -> val < head -> next -> next -> val)) {
                ans[0] = prev != -1? min(ans[0], i - prev): ans[0];
                ans[1] = first != -1? i - first: ans[1];
                prev = i;
                if(first == -1) first = i;
            }
            i++;
            head = head -> next;
        }
        if(ans[0] == INT_MAX) return {-1, -1};
        return ans;
    }
};
