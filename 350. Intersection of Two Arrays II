class Solution {
public:
    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {
        multiset<int> Set;
        vector<int> ans;
        for(int i = 0; i < nums1.size(); i++)
            Set.insert(nums1[i]);
        for(int i = 0; i < nums2.size(); i++) {
            if(Set.find(nums2[i]) != Set.end()) {
                ans.push_back(nums2[i]);
                Set.erase(Set.find(nums2[i]));
            }
        }
        return ans;
    }
};

OR

class Solution {
public:
    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {
        sort(nums1.begin(), nums1.end());
        sort(nums2.begin(), nums2.end());
        vector<int> ans;
        for(int i = 0, j = 0; i < nums1.size() && j < nums2.size();) {
            if(nums1[i] < nums2[j]) i++;
            else if(nums1[i] > nums2[j]) j++;
            else ans.push_back(nums1[i]), i++, j++;
        }
        return ans;
    }
};
