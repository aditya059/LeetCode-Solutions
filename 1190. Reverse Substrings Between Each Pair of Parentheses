class Solution {
public:
    string reverseParentheses(string s) {
        stack<int> Stack;
        for(int i = 0; i < s.length(); i++) {
            if(s[i] == '(') Stack.push(i);
            else if(s[i] == ')') {
                reverse(s.begin() + Stack.top() + 1, s.begin() + i);
                Stack.pop();
            }
        }
        string ans = "";
        for(int i = 0; i < s.length(); i++) {
            if(s[i] != '(' && s[i] != ')')
                ans += s[i];
        }
        return ans;
    }
};

OR

class Solution {
public:
    string reverseParentheses(string s) {
        stack<int> Stack;
        vector<int> jump(s.length());
        for(int i = 0; i < s.length(); i++) {
            if(s[i] == '(') Stack.push(i);
            else if(s[i] == ')') {
                int j = Stack.top();
                jump[i] = j;
                jump[j] = i;
                Stack.pop();
            }
        }
        string ans = "";
        for(int i = 0, dir = 1; i < s.length(); i += dir) {
            if(s[i] == '(' || s[i] == ')') {
                i = jump[i];
                dir = -dir;
            } else {
                ans += s[i];
            }  
        }
        return ans;
    }
};
