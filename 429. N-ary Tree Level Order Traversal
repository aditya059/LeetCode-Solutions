/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    vector<vector<int>> levelOrder(Node* root) {
        vector<vector<int>> ans;
        if(!root) return ans;
        queue<Node*> Queue;
        Queue.push(root);
        while(!Queue.empty()) {
            int n = Queue.size();
            vector<int> level;
            for(int i = 0; i < n; i++) {
                Node *curr = Queue.front();
                Queue.pop();
                level.push_back(curr -> val);
                for(auto iter: curr -> children) {
                    if(iter)
                        Queue.push(iter);
                }
            }
            ans.push_back(level);
        }
        return ans;
    }
};
