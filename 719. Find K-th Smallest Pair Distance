class Solution {
    int count(vector<int> &nums, int diff) {
        int ans = 0;
        for(int start = 0, end = 0; end < nums.size(); end++) {
            while(start < end && nums[end] - nums[start] > diff) {
                start++;
            }
            ans += end - start;
        }
        return ans;
    }
public:
    int smallestDistancePair(vector<int>& nums, int k) {
        sort(nums.begin(), nums.end());
        int low = 0, high = 1e6, ans = 1e6;
        while(low <= high) {
            int mid = low + (high - low) / 2;
            if(count(nums, mid) < k) 
                low = mid + 1;
            else {
                ans = min(ans, mid);
                high = mid - 1;
            } 
        }
        return ans;  
    }
};
