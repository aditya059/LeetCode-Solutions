class Solution {
public:
    vector<int> powerfulIntegers(int x, int y, int bound) {
        if(!bound) return {};
        int m = x > 1? log(bound) / log(x): 1;;
        int n = y > 1? log(bound) / log(y): 1;
        vector<bool> visited(bound + 1, false);
        for(int i = 0; i <= m; i++) {
            for(int j = 0; j <= n; j++) {
                int val = pow(x, i) + pow(y, j);
                if(val <= bound)
                    visited[val] = true;
            }
        }
        vector<int> ans;
        for(int i = 1; i <= bound; i++) {
            if(visited[i])
                ans.push_back(i);
        }
        return ans;
    }
};
