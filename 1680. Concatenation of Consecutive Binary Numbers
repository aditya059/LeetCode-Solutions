class Solution {
public:
    int concatenatedBinary(int n) {
        const int MOD = 1e9 + 7;
        long ans = 0, c = 1;
        for(int i = n; i >= 1; i--) {
            for(int j = i; j > 0; j >>= 1) {
                ans = ((((j & 1) * c) % MOD) + ans) % MOD; 
                c = (c << 1) % MOD;
            }
        }
        return (int)ans;
    }
};

OR

class Solution {
public:
    int len(int n) {
        return 1 + log2(n);
    }
    int concatenatedBinary(int n) {
        const int MOD = 1e9 + 7;
        long ans = 0;
        for(int i = 1; i <= n; i++) {
           ans = (((ans << len(i)) % MOD) + i) % MOD; 
        }
        return ans;
    }
};
