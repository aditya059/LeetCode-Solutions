// C++
class Solution {
public:
    int findTheLongestBalancedSubstring(string s) {
        int n = s.length(), ans = 0;
        for(int i = 0; i < n; ) {
            int zero = 0, one = 0;
            while(i < n && s[i] == '0') {zero++; i++;}
            while(i < n && s[i] == '1') {one++; i++;}
            ans = max(ans, 2 * min(zero, one));
        }
        return ans;
    }
};


// Golang
func max(a, b int) int {
    if a > b {return a}
    return b
}

func findTheLongestBalancedSubstring(s string) int {
    var n, ans int = len(s), 0
    for i := 0; i < n; {
        var zero, one int = 0, 0
        for i < n && s[i] == '0' {zero, i = zero + 1, i + 1}
        for i < n && s[i] == '1' {one, i = one + 1, i + 1}
        ans = max(ans, -2 * max(-zero, -one))
    }
    return ans
}
