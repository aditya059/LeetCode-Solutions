/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    bool traverse(TreeNode* root, int val, string &s) {
        if(root -> val == val) return true;
        if(root -> left && traverse(root -> left, val, s))
            s += "L";
        else if(root -> right && traverse(root -> right, val, s))
            s += "R";
        return s != "";
    }
public:
    string getDirections(TreeNode* root, int startValue, int destValue) {
        string s1 = "", s2 = "";
        traverse(root, startValue, s1);
        traverse(root, destValue, s2);
        reverse(s1.begin(), s1.end());
        reverse(s2.begin(), s2.end());
        int i;
        for(i = 0; i < s1.length() && i < s2.length() && s1[i] == s2[i]; i++);
        return string(s1.length() - i, 'U') + s2.substr(i);
    }
};
