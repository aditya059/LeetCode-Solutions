class comp {
public:
    bool operator()(auto &A, auto &B) {
        return A.first > B.first;
    }
};
class Solution {
    const int MOD = 1e9 + 7;
public:
    int rangeSum(vector<int>& nums, int n, int left, int right) {
        priority_queue<pair<int, int>, vector<pair<int, int>>, comp> PQ;
        for(int i = 0; i < n; i++) {
            PQ.push({nums[i], i + 1});
        }
        int ans = 0, index = 1;
        while(!PQ.empty() && index <= right) {
            auto [sum, rightPos] = PQ.top();
            PQ.pop();
            if(index >= left) ans = (ans + sum) % MOD; 
            if(rightPos < n)
                PQ.push({sum + nums[rightPos], rightPos + 1});
            index++;
        }
        return ans;
    }
};
