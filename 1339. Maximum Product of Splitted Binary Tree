/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    const int MOD = 1e9 + 7;
    int dfs(TreeNode* root, long &ans, int totalSum) {
        if(!root) return 0;
        long subTreeSum = root -> val + dfs(root -> left, ans, totalSum) + dfs(root -> right, ans, totalSum);
        ans = max(ans, subTreeSum * (totalSum - subTreeSum));
        return subTreeSum;         
    }
    int maxProduct(TreeNode* root) {
        long ans = 0;
        int total = dfs(root, ans, 0); 
        dfs(root, ans, total);
        return ans % MOD;
    }
};
