// C++
class Solution {
    const int mod = 1e9 + 7; 
public:
    int countTexts(string pressedKeys) {
        int j, n = pressedKeys.size();
        vector<int> DP(n, 1);
        long long ans = 1;
        for(int i = 0; i < n; i = j) {
            for(j = i + 1; j < n && pressedKeys[j] == pressedKeys[i]; j++) {
                if(j - i == 1) {
                    DP[j] = 2; continue;
                } else if(j - i == 2) {
                    DP[j] = 4; continue;
                }
                DP[j] = ((DP[j - 1] + DP[j - 2]) % mod + DP[j - 3]) % mod;
                if(pressedKeys[i] == '7' || pressedKeys[i] == '9') {
                    if(j - i == 3) {
                        DP[j] = 8; continue;
                    }
                    DP[j] = (DP[j] + DP[j - 4]) % mod;
                }
            }
            ans = (ans * DP[j - 1]) % mod;
        }
        return ans;
    }
};


// Golang
const mod int = 1e9 + 7
func countTexts(pressedKeys string) int {
    var j, n int = 1, len(pressedKeys)
    DP := make([]int, n)
    var ans int = 1
    for i := 0; i < n; i = j {
        DP[i] = 1
        for j = i + 1; j < n && pressedKeys[j] == pressedKeys[i]; j++ {
            if j - i == 1 {
                DP[j] = 2
                continue
            } else if j - i == 2 {
                DP[j] = 4 
                continue
            }
            DP[j] = ((DP[j - 1] + DP[j - 2]) % mod + DP[j - 3]) % mod
            if pressedKeys[i] == '7' || pressedKeys[i] == '9' {
                if j - i == 3 {
                    DP[j] = 8
                    continue
                }
                DP[j] = (DP[j] + DP[j - 4]) % mod
            }
        }
        ans = (ans * DP[j - 1]) % mod
    }
    return ans
}
