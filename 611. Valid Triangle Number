class Solution {
public:
    int triangleNumber(vector<int>& nums) {
        int ans = 0;
        sort(nums.begin(), nums.end());
        for(int i = 0; i < (int)nums.size() - 2; i++) {
            for(int j = i + 1; j < (int)nums.size() - 1; j++) {
                int k = lower_bound(nums.begin() + j + 1, nums.end(), nums[i] + nums[j]) - nums.begin();
                ans += k - j - 1;
            }
        }
        return ans;
    }
};


OR

class Solution {
public:
    int triangleNumber(vector<int>& nums) {
        int ans = 0; 
        sort(nums.begin(), nums.end());
        for(int i = 0; i < (int)nums.size() - 2; i++) {
            int k = i + 2;
            for(int j = i + 1; j < (int)nums.size() - 1 && nums[i] != 0; j++) {
                while(k < nums.size() && nums[i] + nums[j] > nums[k]) 
                    k++;
                ans += k - j - 1;
            }
        }
        return ans;
    }
};
