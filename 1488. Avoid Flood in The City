class Solution {
public:
    vector<int> avoidFlood(vector<int>& rains) {
        int n = rains.size();
        set<int> noRainDay;
        unordered_map<int, int> pos;
        vector<int> ans(n, -1);
        for(int i = 0; i < n; i++) {
            if(rains[i]) {
                int city = rains[i];
                if(pos.contains(city)) {
                    auto iter = noRainDay.lower_bound(pos[city]);
                    if(iter == noRainDay.end()) return {};
                    ans[*iter] = city; 
                    noRainDay.erase(iter);
                } 
                pos[city] = i;
            } else {
                noRainDay.insert(i);
                ans[i] = 1;
            }
        }
        return ans;
    }
};
