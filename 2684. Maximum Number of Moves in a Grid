class Solution {
public:
    int maxMoves(vector<vector<int>>& grid) {
        int m = grid.size(), n = grid[0].size();
        vector<vector<int>> DP(m, vector<int>(n));
        for(int col = n - 2; col >= 0; col--) {
            for(int row = m - 1; row >= 0; row--) {
                if(row > 0 && grid[row - 1][col + 1] > grid[row][col])
                    DP[row][col] = max(DP[row][col], 1 + DP[row - 1][col + 1]);
                if(grid[row][col + 1] > grid[row][col])
                    DP[row][col] = max(DP[row][col], 1 + DP[row][col + 1]);
                if(row < m - 1 && grid[row + 1][col + 1] > grid[row][col])
                    DP[row][col] = max(DP[row][col], 1 + DP[row + 1][col + 1]);
            }
        }
        int ans = 0;
        for(int i = 0; i < m; i++) {
            ans = max(ans, DP[i][0]);
        }
        return ans;
    }
};
