/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void compute(TreeNode* root, int targetSum, vector<vector<int>> &ans, vector<int> &temp) {
        if(root == NULL) {
            return;
        }   
        temp.push_back(root -> val);
        targetSum -= root -> val;
        if(!root -> left && !root -> right && !targetSum) {
            ans.push_back(temp);
        } 
        compute(root -> left, targetSum, ans, temp);
        compute(root -> right, targetSum, ans, temp);
        targetSum += root -> val;
        temp.pop_back();
    }
    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {
        vector<vector<int>> ans;
        vector<int> temp;
        compute(root, targetSum, ans, temp);
        return ans;
    }
};
