/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void dfs(TreeNode* root, map<int, map<int, multiset<int>>> &Map, int row, int col) {
        if(!root) return;
        Map[col][row].insert(root -> val);
        dfs(root -> left, Map, row + 1, col - 1);
        dfs(root -> right, Map, row + 1, col + 1);
    }
    vector<vector<int>> verticalTraversal(TreeNode* root) {
        map<int, map<int, multiset<int>>> Map;
        dfs(root, Map, 0, 0);
        vector<vector<int>> ans;
        for(auto iter: Map) {
            vector<int> temp;
            for(auto Set: iter.second) {
                for(auto item: Set.second) {
                    temp.push_back(item);
                }
            }
            ans.push_back(temp);
        }
        return ans;
    }
};
