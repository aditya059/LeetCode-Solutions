// C++
class Solution {
public:
    vector<string> twoEditWords(vector<string>& queries, vector<string>& dictionary) {
        vector<string> ans;
        for(string query: queries) {
            for(string dict: dictionary) {
                int count = 0;
                for(int i = 0; i < query.size(); i++) {
                    count += (query[i] != dict[i]);
                }
                if(count <= 2) {
                    ans.push_back(query);
                    break;
                }
            }
        }
        return ans;
    }
};


// Golang
func twoEditWords(queries []string, dictionary []string) []string {
    ans := []string{}
    for _, query := range queries {
        for _, dict := range dictionary {
            var count int = 0
            for i := 0; i < len(query); i++ {
                if query[i] != dict[i] {count++}
            }
            if count <= 2 {
                ans = append(ans, query)
                break
            }
        }
    }
    return ans
}
