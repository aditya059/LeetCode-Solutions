class Solution {
public:
    vector<int> largestDivisibleSubset(vector<int>& nums) {
        sort(nums.begin(), nums.end());
        int n = nums.size(), index = 0;
        vector<int> DP(n, 1), parent(n, -1);
        for(int i = 1; i < n; i++) {
            for(int j = 0; j < i; j++) {
                if(nums[i] % nums[j] == 0 && DP[j] + 1 > DP[i]) {
                    DP[i] = DP[j] + 1;
                    parent[i] = j;
                }
            }
            if(DP[i] > DP[index]) {
                index = i;
            }
        }
        vector<int> ans;
        while(index != -1) {
            ans.push_back(nums[index]);
            index = parent[index];
        }
        return ans;
    }
};
