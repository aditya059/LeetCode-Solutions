class NumArray {
public:
    vector<int> BIT;
    vector<int> numbers;
    NumArray(vector<int>& nums) {
        BIT.resize(nums.size() + 1);
        numbers.resize(nums.size());
        for(int i = 0; i < nums.size(); i++) {
            update(i, nums[i]);
        }
    }
    
    void update(int index, int val) {
        int i = index + 1;
        int x = val - numbers[index];
        numbers[index] = val;
        while(i < BIT.size()) {
            BIT[i] += x;
            i += i & -i;
        }
    }
    
    int query(int i) {
        int sum = 0;
        while(i > 0) {
            sum += BIT[i];
            i -= i & -i;
        }
        return sum;
    }
    
    int sumRange(int left, int right) {
        return query(right + 1) - query(left);
    }
};

/**
 * Your NumArray object will be instantiated and called as such:
 * NumArray* obj = new NumArray(nums);
 * obj->update(index,val);
 * int param_2 = obj->sumRange(left,right);
 */
