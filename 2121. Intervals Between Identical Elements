class Solution {
public:
    vector<long long> getDistances(vector<int>& arr) {
        int n = arr.size();
        vector<long long> prefix(n);
        vector<long long> suffix(n);
        unordered_map<int, int> count;
        unordered_map<int, int> lastPos;
        for(int i = 0; i < n; i++) {
            prefix[i] = prefix[lastPos[arr[i]]] + count[arr[i]] * (i - lastPos[arr[i]]);
            lastPos[arr[i]] = i;
            count[arr[i]]++;
        }
        count.clear();
        lastPos.clear();
        for(int i = n - 1; i >= 0; i--) {
            suffix[i] = suffix[lastPos[arr[i]]] + count[arr[i]] * (lastPos[arr[i]] - i);
            lastPos[arr[i]] = i;
            count[arr[i]]++;
        }
        for(int i = 0; i < n; i++) {
            prefix[i] = prefix[i] + suffix[i];
        }
        return prefix;
    }
};
