/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int prev = INT_MAX;
    void inorder(TreeNode* root, vector<int> &ans, int &count, int &maxCount) {
        if(root == NULL)
            return;
        inorder(root -> left, ans, count, maxCount);
        count = root -> val == prev? count + 1: 1; 
        if(count == maxCount) 
            ans.push_back(root -> val);
        else if(count > maxCount) {
            ans.clear();
            ans.push_back(root -> val);
            maxCount = max(maxCount, count);
        }
        prev = root -> val;
        inorder(root -> right, ans, count, maxCount);
    }
    vector<int> findMode(TreeNode* root) {
        vector<int> ans;
        int count = 0;
        int maxCount = 0;
        inorder(root, ans, count, maxCount);
        return ans;
    }
};
