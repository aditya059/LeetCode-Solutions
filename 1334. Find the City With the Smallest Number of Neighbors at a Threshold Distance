class Solution {
public:
    int findTheCity(int n, vector<vector<int>>& edges, int distanceThreshold) {
        const int maxInt = INT_MAX / n;
        vector<vector<int>> cost(n, vector<int>(n, maxInt));
        for(vector<int> edge: edges) {
            cost[edge[0]][edge[1]] = edge[2];
            cost[edge[1]][edge[0]] = edge[2]; 
        }
        for(int i = 0; i < n; i++) cost[i][i] = 0;
        for(int k = 0; k < n; k++) {
            for(int i = 0; i < n; i++) {
                for(int j = 0; j < n; j++) {
                    cost[i][j] = min(cost[i][j], cost[i][k] + cost[k][j]);
                }
            }
        }
        int ans = 0, minCount = n;
        for(int i = 0; i < n; i++) {
            int count = 0;
            for(int j = 0; j < n; j++) {
                count += cost[i][j] <= distanceThreshold;
            }
            if(count <= minCount) {
                ans = i;
                minCount = count;
            }
        }
        return ans;
    }
};
