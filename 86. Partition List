/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* partition(ListNode* head, int x) {
        ListNode *first = new ListNode();
        ListNode *second = new ListNode();
        ListNode *p = first;
        ListNode *q = second;
        while(head) {
            if(head -> val < x) {
                p -> next = head;
                p = p -> next;
            }
            else {
                q -> next = head;
                q = q -> next;
            }
            head = head -> next;
        }
        q -> next = NULL;
        p -> next = second -> next;
        head = first -> next;
        delete(first);
        delete(second);
        return head;
    }
};

OR

class Solution {
public:
    ListNode* partition(ListNode* head, int x) {
        ListNode first(0);
        ListNode second(0);
        ListNode *p = &first;
        ListNode *q = &second;
        while(head) {
            if(head -> val < x) {
                p -> next = head;
                p = p -> next;
            }
            else {
                q -> next = head;
                q = q -> next;
            }
            head = head -> next;
        }
        q -> next = NULL;
        p -> next = second.next;
        return first.next;
    }
};
