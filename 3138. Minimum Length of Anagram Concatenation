class Solution {
    bool check(string &s, int k, int n) {
        vector<int> freq1(26);
        for(int i = 0; i < k; i++) {
            freq1[s[i] - 'a']++;
        }
        for(int i = k; i < n; i += k) {
            vector<int> freq2(26);
            for(int j = 0; j < k; j++) {
                freq2[s[i + j] - 'a']++;
            }
            for(int j = 0; j < 26; j++) {
                if(freq1[j] != freq2[j]) return false;
            }
        }
        return true;
    }
public:
    int minAnagramLength(string s) {
        int n = s.length();
        for(int i = 1; i <= n; i++) {
            if(n % i) continue;
            if(check(s, i, n)) return i;
        }
        return s.length();
    }
};

OR

class Solution {
    bool check(string &s, int k, int n) {
        vector<int> freq1(26);
        for(int i = 0; i < k; i++) {
            freq1[s[i] - 'a']++;
        }
        for(int i = k; i < n; i += k) {
            vector<int> freq2(26);
            for(int j = 0; j < k; j++) {
                freq2[s[i + j] - 'a']++;
            }
            for(int j = 0; j < 26; j++) {
                if(freq1[j] != freq2[j]) return false;
            }
        }
        return true;
    }
public:
    int minAnagramLength(string s) {
        int n = s.length();
        int m = sqrt(n), ans = s.length();
        for(int i = 1; i <= m; i++) {
            if(n % i) continue;
            if(check(s, i, n)) return i;
            if(check(s, n / i, n)) ans = min(n / i, ans);
        }
        return ans;
    }
};
