class Solution {
public:
    int longestNiceSubarray(vector<int>& nums) {
        int ans = 1, i;
        for(int start = 0, end = 1; end < nums.size(); end++, start = i + 1) {
            for(i = end - 1; i >= start; i--) {
                if(nums[i] & nums[end]) break;
            }
            ans = max(ans, end - i);
        }
        return ans;
    }
};

OR

class Solution {
public:
    int longestNiceSubarray(vector<int>& nums) {
        int ans = 0, usedBits = 0;
        for(int start = 0, end = 0; end < nums.size(); end++) {
            while(usedBits & nums[end])
                usedBits ^= nums[start++];
            usedBits |= nums[end];
            ans = max(ans, end - start + 1);
        }
        return ans;
    }
};
