class Solution {
    int solve(string &s, int len, int points, int &ans, char a, char b) {
        int top = -1;
        for(int i = 0; i < len; i++) {
            if(top > -1 && s[top] == a && s[i] == b) {
                ans += points;
                top--;
            } else {
                s[++top] = s[i];
            }
        }
        return top + 1;
    }
public:
    int maximumGain(string s, int x, int y) {
        int ans = 0;
        if(x > y) {
            int len = solve(s, s.length(), x, ans, 'a', 'b');
            solve(s, len, y, ans, 'b', 'a');
        } else {
            int len = solve(s, s.length(), y, ans, 'b', 'a');
            solve(s, len, x, ans, 'a', 'b');
        }
        return ans;
    }
};

OR

class Solution {
    int solve(string &s, int len, int points, int &ans, char a, char b) {
        int top = -1;
        for(int i = 0; i < len; i++) {
            if(top > -1 && s[top] == a && s[i] == b) {
                ans += points;
                top--;
            } else {
                s[++top] = s[i];
            }
        }
        return top + 1;
    }
public:
    int maximumGain(string s, int x, int y, char a = 'a', char b = 'b') {
        if(y > x) 
            return maximumGain(s, y, x, 'b', 'a');
        int ans = 0;
        int len = solve(s, s.length(), x, ans, a, b);
        solve(s, len, y, ans, b, a);
        return ans;
    }
};
