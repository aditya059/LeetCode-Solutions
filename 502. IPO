class Solution {
public:
    int findMaximizedCapital(int k, int w, vector<int>& profits, vector<int>& capital) {
        int n = profits.size();
        vector<int> index(n);
        iota(index.begin(), index.end(), 0);
        sort(index.begin(), index.end(), [&](int &A, int &B) {
            return capital[A] < capital[B];
        });
        priority_queue<int> PQ;
        int i = 0;
        while(k-- > 0) {
            while(i < n && capital[index[i]] <= w) PQ.push(profits[index[i++]]);
            if(PQ.empty()) break;
            w += PQ.top();
            PQ.pop();   
        }
        return w;
    }
};
