// O(log(mn)) = O(log m + log n)

// C++
class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int i = 0; 
        int j = matrix.size() * matrix[0].size() - 1;
        while(i <= j) {
            int mid = i + (j - i) / 2;
            int r = mid / matrix[0].size(); 
            int c = mid % matrix[0].size();
            if(matrix[r][c] == target)
                return true;
            else if(matrix[r][c] < target)
                i = mid + 1;
            else
                j = mid - 1;
        }
        return false;
    }
};


// Golang
func searchMatrix(matrix [][]int, target int) bool {
    i := 0 
    j := len(matrix) * len(matrix[0]) - 1
    for i <= j {
        mid := i + (j - i) / 2
        r := mid / len(matrix[0]) 
        c := mid % len(matrix[0])
        if matrix[r][c] == target {
            return true
        } else if matrix[r][c] < target {
            i = mid + 1
        } else {
            j = mid - 1
        }
    }
    return false
}
