class Solution {
public:
    bool canSortArray(vector<int>& nums) {
        int prev = 0;
        for(int i = 1; i < nums.size(); i++) {
            if(__builtin_popcount(nums[i]) != __builtin_popcount(nums[i - 1])) {
                sort(nums.begin() + prev, nums.begin() + i);
                prev = i;
            }
        }
        sort(nums.begin() + prev, nums.end());
        for(int i = 1; i < nums.size(); i++) {
            if(nums[i] < nums[i - 1]) return false;
        }
        return true;
    }
};

OR

class Solution {
public:
    bool canSortArray(vector<int>& nums) {
        int prevMax = 0, nextMax = 0, bitCount = __builtin_popcount(nums[0]);
        for(int i = 0; i < nums.size(); i++) {
            if(__builtin_popcount(nums[i]) == bitCount) {
                if(nums[i] < prevMax) return false;
                nextMax = max(nextMax, nums[i]);
            } else {
                bitCount = __builtin_popcount(nums[i]);
                prevMax = nextMax;
                if(nums[i] < prevMax) return false;
                nextMax = nums[i];
            }
        }
        return true;
    }
};
