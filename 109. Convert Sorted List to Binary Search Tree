/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* solve(ListNode* low, ListNode* high) {
        if(low == high) 
            return NULL;
        ListNode* mid = low;
        ListNode* fast = low;
        while(fast != high && fast -> next != high) {
            mid = mid -> next;
            fast = fast -> next -> next;
        }
        TreeNode* root = new TreeNode(mid -> val);
        root -> left = solve(low, mid);
        root -> right = solve(mid -> next, high);
        return root;
    }
    TreeNode* sortedListToBST(ListNode* head) {
        return solve(head, NULL);
    }
};
