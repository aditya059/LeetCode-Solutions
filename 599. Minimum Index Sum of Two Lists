class Solution {
public:
    vector<string> findRestaurant(vector<string>& list1, vector<string>& list2) {
        map<string, int> Map1;
        map<string, int> Map2;
        for(int i = 0; i < list1.size(); i++)
            Map1[list1[i]] = i;
        int minCount = INT_MAX;
        for(int i = 0; i < list2.size(); i++) {
            if(Map1.find(list2[i]) == Map1.end())
                Map2[list2[i]] = INT_MAX;
            else
                Map2[list2[i]] = Map1[list2[i]] + i;
            minCount = min(minCount, Map2[list2[i]]);
        }
        vector<string> ans;
        for(auto iter: Map2) {
            if(iter.second == minCount)
                ans.push_back(iter.first);
        }
        return ans;
    }
};

OR

class Solution {
public:
    vector<string> findRestaurant(vector<string>& list1, vector<string>& list2) {
        map<string, int> Map;
        for(int i = 0; i < list1.size(); i++)
            Map[list1[i]] = i;
        vector<string> ans;
        int minCount = INT_MAX, count;
        for(int i = 0; i < list2.size(); i++) {
            if(Map.find(list2[i]) == Map.end())
                continue;
            else {
                Map[list2[i]] += i;
                count = Map[list2[i]];
                if(count == minCount) {
                    ans.push_back(list2[i]);
                }
                else if(count < minCount) {
                    ans.clear();
                    ans.push_back(list2[i]);
                    minCount = min(minCount, Map[list2[i]]);
                }  
            }
        }
        return ans;
    }
};
