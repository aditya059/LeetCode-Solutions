/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxLevelSum(TreeNode* root) {
        int ans = 0, maxSum = INT_MIN, level = 1;;
        queue<TreeNode*> Queue;
        Queue.push(root);
        while(!Queue.empty()) {
            int sz = Queue.size();
            int sum = 0;
            for(int i = 0; i < sz; i++) {
                TreeNode* curr = Queue.front();
                Queue.pop();
                sum += curr -> val;
                if(curr -> left)
                    Queue.push(curr -> left);
                if(curr -> right)
                    Queue.push(curr -> right);
            }
            if(sum > maxSum) {
                maxSum = sum;
                ans = level;
            }
            level++;
        }
        return ans;
    }
};
