class Solution {
public:
    vector<string> findRelativeRanks(vector<int>& score) {
        map<int, int> Map;
        vector<string> ans(score.size());
        for(int i = 0; i < score.size(); i++) {
            Map[score[i]] = i;
        }
        int n = score.size();
        string temp;
        for(auto iter: Map) {
            temp = to_string(n);
            if(n == 1) temp = "Gold Medal";
            else if(n == 2) temp = "Silver Medal";
            else if(n == 3) temp = "Bronze Medal";
            ans[iter.second] = temp;
            n--;
        }
        return ans;
    }
};

OR

class Solution {
public:
    vector<string> findRelativeRanks(vector<int>& score) {
        int n = score.size();
        vector<int> index(n);
        iota(index.begin(), index.end(), 0);
        sort(index.begin(), index.end(), [&](int i, int j) {
            return score[i] > score[j];
        });
        vector<string> ans(n);
        ans[index[0]] = "Gold Medal";
        if(n > 1) ans[index[1]] = "Silver Medal";
        if(n > 2) ans[index[2]] = "Bronze Medal";
        for(int i = 3; i < n; i++) {
            ans[index[i]] = to_string(i + 1);
        }
        return ans;
    }
};
