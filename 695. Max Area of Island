class Solution {
public:
    void dfs(vector<vector<int>>& grid, int i, int j, int &count) {
        if(i < 0 || j < 0 || i >= grid.size() || j >= grid[0].size() || !grid[i][j])
            return;
        grid[i][j] = 0;
        count++;
        dfs(grid, i - 1, j, count);
        dfs(grid, i + 1, j, count);
        dfs(grid, i, j - 1, count);
        dfs(grid, i, j + 1, count);
    }
    int maxAreaOfIsland(vector<vector<int>>& grid) {
        int ans;
        for(int i = 0; i < grid.size(); i++) {
            for(int j = 0; j < grid[0].size(); j++) {
                int count = 0;
                if(grid[i][j]) {
                    dfs(grid, i, j, count);
                }
                ans = max(ans, count);
            }
        }
        return ans;
    }
};
