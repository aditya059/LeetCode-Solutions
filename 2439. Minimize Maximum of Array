// C++
class Solution {
public:
    int minimizeArrayValue(vector<int>& nums) {
        long sum = 0, ans = 0;
        for(int i = 0; i < nums.size(); i++) {
            sum += nums[i];
            ans = max(ans, (long)ceil(sum * 1.0 / (i + 1)));
        }
        return ans;
    }
};


// Golang
func max(a, b int64) int64 {
    if a > b {
        return a
    }
    return b
}

func minimizeArrayValue(nums []int) int {
    var sum, ans int64 = 0, 0
    for i := 0; i < len(nums); i++ {
        sum += int64(nums[i])
        ans = max(ans, int64(math.Ceil(float64(sum) * 1.0 / float64(i + 1))))
    }
    return int(ans)
}
