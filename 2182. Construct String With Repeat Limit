// C++
class Solution {
public:
    string repeatLimitedString(string s, int repeatLimit) {
        int freq[26] = {0};
        for(char ch: s) {
            freq[ch - 'a']++;
        }
        string ans = "";
        for(int i = 25; i >= 0; i -= !freq[i]) {
            int count = 0;
            while(freq[i] && count < repeatLimit) {
                ans += 'a' + i;
                freq[i]--;
                count++;
            }
            if(freq[i]) {
                int j;
                for(j = i - 1; j >= 0; j--) {
                    if(freq[j]) {
                        ans += 'a' + j;
                        freq[j]--;
                        break;
                    }
                }
                if(j == -1) break;
            } 
        }
        return ans;
    }
};


// Golang
func repeatLimitedString(s string, repeatLimit int) string {
    freq := make([]int, 26)
    for _, ch := range s {
        freq[ch - 'a']++
    }

    var ans strings.Builder

    for i := 25; i >= 0; {
        count := 0
        for freq[i] > 0 && count < repeatLimit {
            ans.WriteString(string('a' + i))
            freq[i]--
            count++
        }
        if freq[i] > 0 {
            var j int
            for j = i - 1; j >= 0; j-- {
                if freq[j] > 0 {
                    ans.WriteString(string('a' + j))
                    freq[j]--
                    break
                }
            }
            if j == -1 {break}
        } 
        if freq[i] == 0 {i--}
    }
    return ans.String()
}
