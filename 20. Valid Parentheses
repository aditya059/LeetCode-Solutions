// With Stack
class Solution {
public:
    bool isValid(string s) {
        stack<char> Stack;
        for(int i = 0; i < s.length(); i++) {
            if(s[i] == '(' || s[i] == '{' || s[i] == '[')
                Stack.push(s[i]);
            else if(!Stack.empty()) {
                if(Stack.top() == '(' && s[i] == ')')
                    Stack.pop();
                else if(Stack.top() == '{' && s[i] == '}')
                    Stack.pop();
                else if(Stack.top() == '[' && s[i] == ']')
                    Stack.pop();
                else
                    return false;
            }
            else
                return false;
        }
        if(!Stack.empty()) return false;
        return true;
    }
};


// Without Stack (Reusing string)
class Solution {
public:
    bool isValid(string s) {
        int top = -1;
        for(int i = 0; i < s.length(); i++) {
            if(s[i] == '(' || s[i] == '{' || s[i] == '[')
                s[++top] = s[i];
            else if(top != -1) {
                if(s[top] == '(' && s[i] == ')')
                    --top;
                else if(s[top] == '{' && s[i] == '}')
                    --top;
                else if(s[top] == '[' && s[i] == ']')
                    --top;
                else
                    return false;
            }
            else
                return false;
        }
        if(top != -1) return false;
        return true;
    }
};
